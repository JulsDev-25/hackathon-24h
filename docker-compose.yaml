volumes:
  pgdata:
  # grafana_data:

networks:
  backend:

services:
  db:
    image: postgres:15
    container_name: db
    restart: always
    environment:
      POSTGRES_DB: taskdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - pgdata:/var/lib/postgresql/data
    expose:
      - "5432"
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d taskdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  server:
    build: ./server
    container_name: server
    command: >
      sh -c "
        python manage.py migrate &&
        poetry run python manage.py runserver 0.0.0.0:8000
      "
    volumes:
      - ./server:/app
    expose:
      - "8000"
    environment:
      DATABASE_URL: postgres://user:password@db:5432/taskdb
    depends_on:
      - db
    networks:
      - backend

  client:
    build: ./client
    container_name: client
    expose:
      - "5173"
    volumes:
      - ./client:/app
      - /app/node_modules
    working_dir: /app
    command: yarn dev --host
    depends_on:
      - server
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5173 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - backend

  proxy:
    build:
      context: ./proxy
    container_name: proxy
    ports:
      - "80:80"
    depends_on:
      - client
      - server
    networks:
      - backend

  # monitoring_prometheus:
  #   image: prom/prometheus
  #   container_name: prometheus
  #   volumes:
  #     - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
  #   ports:
  #     - "9090:9090"
  #   networks:
  #     - backend

  # monitoring_grafana:
  #   image: grafana/grafana
  #   container_name: grafana
  #   ports:
  #     - "3001:3000"
  #   volumes:
  #     - grafana_data:/var/lib/grafana
  #   networks:
  #     - backend
